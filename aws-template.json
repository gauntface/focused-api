{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Transform": "AWS::Serverless-2016-10-31",
  "Description": "focused",
  "Parameters": {
    "FocusedEnv": {
      "Type": "String",
      "Description": "Which environment do you want to deploy to?",
      "AllowedValues": [
        "local",
        "dev",
        "staging",
        "prod"
      ],
      "Default": "local"
    },
    "APIDomain": {
      "Type": "String",
      "Description": "The domain for the api service"
    }
  },
  "Globals": {
    "Function": {
      "Timeout": 5,
      "Environment": {
        "Variables": {
          "FOCUSED_ENV": { "Ref": "FocusEnv" }
        }
      }
    }
  },
  "Resources": {

    "ApiGatewayApi": {
      "Type": "AWS::Serverless::HttpApi",
      "Properties": {
        "StageName": "focused-api",
      },
      "Domain": {
        "DomainName": { "Ref": "APIDomain" },
        "CertificateArn": { "Ref": "APIDomainARN" },
        "EndpointConfiguration": "REGIONAL"
      }
    },

    "BasePath": {
      "Type": "AWS::ApiGatewayV2::ApiMapping",
      "Properties": {
        "ApiId": { "Ref": "ApiGatewayApi" },
        "DomainName": { "Ref": "APIDomain" },
        "Stage": { "Ref": "ApiGatewayApi.Stage" }
      },
      "DependsOn": [
        "ApiGatewayApi"
      ]
    },

    "HealthCheckFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "CodeUri": ".",
        "Handler": "bootstrap",
        "FunctionName": {
          "Fn::Sub": [
            "healthcheck_${FocusEnv}",
              {
                  "FocusEnv": {
                      "Ref": "FocusEnv"
                  }
              }
          ]
        },
        "Runtime": "provided.al2",
        "Architectures": [
          "x86_64"
        ],
        "Events": {
          "HTTPEvent": {
            "Type": "HttpApi",
            "Properties": {
              "ApiId": { "Ref": "ApiGatewayApi" },
              "Path": "/ok",
              "Method": "GET",
              "Auth": {
                "Authorizer": "NONE"
              }
            }
          }
        }
      }
    }
  }
}
